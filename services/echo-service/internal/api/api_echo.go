/*
 * Echo Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strconv"
	"strings"
)

// A EchoApiController binds http requests to an api service and writes the service results to the http response
type EchoApiController struct {
	service EchoApiServicer
}

// NewEchoApiController creates a default api controller
func NewEchoApiController(s EchoApiServicer) Router {
	return &EchoApiController{service: s}
}

// Routes returns all of the api route for the EchoApiController
func (c *EchoApiController) Routes() Routes {
	return Routes{
		{
			"GetCurrentUserInfo",
			strings.ToUpper("Get"),
			"/api/v1/echo-user",
			c.GetCurrentUserInfo,
		},
	}
}

// GetCurrentUserInfo -
func (c *EchoApiController) GetCurrentUserInfo(w http.ResponseWriter, r *http.Request) {
	userID, _ := strconv.Atoi(r.Header.Get("X-User-Id"))
	user := User{
		ID:    int64(userID),
		Email: r.Header.Get("X-User-Email"),
	}

	result, err := c.service.GetCurrentUserInfo(r.Context(), user)
	// If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
