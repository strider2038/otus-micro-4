{
	"info": {
		"_postman_id": "e6ce3ff2-c9fd-4318-8683-4b1f5647df49",
		"name": "otus homework 5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var request = JSON.parse(request.data);",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);",
							"});",
							"pm.test(\"Assert attributes\", function () {",
							"    pm.expect(response.email).to.eql(request.email);",
							"    pm.expect(response.firstName).to.eql(request.firstName);",
							"    pm.expect(response.lastName).to.eql(request.lastName);",
							"});",
							"",
							"pm.environment.set(\"userId\", response.id);",
							"pm.environment.set(\"userEmail\", response.email);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"password\": \"pa$$word\",\n  \"firstName\": \"{{$randomLastName}}\",\n  \"lastName\": \"{{$randomFirstName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/identity/register",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user 1 profile (unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get profile unauthorized\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([401]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/api/v1/identity/profile",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user 1 profile (unauthorized) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update profile unauthorized\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([401]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{$randomLastName}}\",\n  \"lastName\": \"{{$randomFirstName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/identity/profile",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function jwt_decode(a) {",
							"    var parts = a.split('.'); // header, payload, signature",
							"    return JSON.parse(atob(parts[1]));",
							"}",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Login success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Assert access token\", function () {",
							"    pm.expect(response.accessToken).to.be.a(\"string\");",
							"    let token=jwt_decode(response.accessToken);",
							"    pm.expect(token.userId).to.eq(pm.environment.get(\"userId\"));",
							"    pm.expect(token.email).to.eq(pm.environment.get(\"userEmail\"));",
							"});",
							"",
							"pm.environment.set(\"accessToken\", response.accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"pa$$word\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/identity/login",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user 1 profile (ok)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Assert profile updated\", function () {    ",
							"    pm.expect(jsonData.firstName).to.eql(\"John\");",
							"    pm.expect(jsonData.lastName).to.eql(\"Doe\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/identity/profile",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user 1 profile (ok)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Assert profile\", function () {    ",
							"    pm.expect(jsonData.firstName).to.eql(\"John\");",
							"    pm.expect(jsonData.lastName).to.eql(\"Doe\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/api/v1/identity/profile",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "register user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var request = JSON.parse(request.data);",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);",
							"});",
							"pm.test(\"Assert attributes\", function () {",
							"    pm.expect(response.email).to.eql(request.email);",
							"    pm.expect(response.firstName).to.eql(request.firstName);",
							"    pm.expect(response.lastName).to.eql(request.lastName);",
							"});",
							"",
							"pm.environment.set(\"user2Id\", response.id);",
							"pm.environment.set(\"user2Email\", response.email);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"password\": \"pa$$word\",\n  \"firstName\": \"{{$randomLastName}}\",\n  \"lastName\": \"{{$randomFirstName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/identity/register",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function jwt_decode(a) {",
							"    var parts = a.split('.'); // header, payload, signature",
							"    return JSON.parse(atob(parts[1]));",
							"}",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Login success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Assert access token\", function () {",
							"    pm.expect(response.accessToken).to.be.a(\"string\");",
							"    let token=jwt_decode(response.accessToken);",
							"    pm.expect(token.userId).to.eq(pm.environment.get(\"user2Id\"));",
							"    pm.expect(token.email).to.eq(pm.environment.get(\"user2Email\"));",
							"});",
							"",
							"pm.environment.set(\"accessToken\", response.accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{user2Email}}\",\n  \"password\": \"pa$$word\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/identity/login",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user 2 profile (ok)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Assert user 2 profile differs from user 1\", function () {    ",
							"    pm.expect(jsonData.id).to.not.eq(pm.environment.get(\"userId\"));",
							"    pm.expect(jsonData.id).to.eq(pm.environment.get(\"user2Id\"));",
							"    pm.expect(jsonData.email).to.not.eq(pm.environment.get(\"userEmail\"));",
							"    pm.expect(jsonData.email).to.eq(pm.environment.get(\"user2Email\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/api/v1/identity/profile",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"identity",
						"profile"
					]
				}
			},
			"response": []
		}
	]
}